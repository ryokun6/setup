// Dynamic Button Plugin (cmd j)
/*
  Original code from https://github.com/ddwht/sketch-dynamic-button
  Fixed for Sketch 3.5 by Bohemian Coding
  UPDATE: Mar 1: 2015 - Issue 1
*/

function addLayerOfRectType(parent,rect) {
    var style = MSDefaultStyle.defaultStyle();
    var rectShape=MSRectangleShape.alloc().init();
    rectShape.cornerRadiusFloat = 5;
    rectShape.frame = MSRect.rectWithRect(rect);
    var container=MSShapeGroup.alloc().init();
    container.addLayers([rectShape]);
    var fill = container.style().fills().addNewStylePart();
    fill.color = MSColor.colorWithSVGString("#ddd");
    container.resizeToFitChildrenWithOption(1);
    parent.addLayers([container]);
    return container;
}

function alert(msg, title) {
  title = title || "alert";
  var app = [NSApplication sharedApplication];
  [app displayDialog:msg withTitle:title];
}

function getBackgroundForGroup(group) {
  var groupLayers = [group layers];
  for (var i=0; i<[groupLayers count]; i++) {
    var layer = [groupLayers objectAtIndex:i];
    if ([layer name] == "BG") {
      return layer;
    }
  }
  return false;
}

function getButtonDimensionsForLayer(layer){
  log("getButtonDimensionsForLayer: " + [layer frame])
  var frame = [layer frame]
  var layerHeight = [frame height],
      layerWidth =  [frame width],
      layerX =      [frame x],
      layerY =      [frame y]

  var splitLayer = [layer name].split(':');
  var offsetTop,offsetRight,offsetRight,offsetLeft;
  switch(splitLayer.length) {
    case 1: 
      layer.name = '0:0:0:0';
      offsetTop = offsetRight = offsetBottom = offsetLeft = 0;
      break;
    case 2:
      offsetTop = offsetBottom = parseInt(splitLayer[0]) || 0;
      offsetRight = offsetLeft = parseInt(splitLayer[1]) || 0;
      break;
    case 3:
      offsetTop = parseInt(splitLayer[0]) || 0;
      offsetRight = offsetLeft = parseInt(splitLayer[1]) || 0;
      offsetBottom = parseInt(splitLayer[2]) || 0;
      break;
    case 4:
      offsetTop = parseInt(splitLayer[0]) || 0;
      offsetRight = parseInt(splitLayer[1]) || 0;
      offsetBottom = parseInt(splitLayer[2]) || 0;
      offsetLeft = parseInt(splitLayer[3]) || 0;
      break;
    default: 
      alert('Wrong format', 'Error');
  }
  return {
    x: layerX,
    y: layerY,
    width: layerWidth,
    height: layerHeight,
    offsetTop: offsetTop,
    offsetBottom: offsetBottom,
    offsetLeft: offsetLeft,
    offsetRight: offsetRight,
    totalWidth: (layerWidth + offsetLeft  + offsetRight),
    totalHeight: (layerHeight + offsetTop  + offsetBottom)
  }
}

var onRun = function(context){
  var selection = context.selection;
  var doc = context.document;

  if ([selection count] == 0) {
    alert('You need to select at least one layer', 'Selection is empty');
  } else {
    for (var i=0; i < [selection count]; i++) {
      var currentLayer = [selection objectAtIndex:i],
          parentGroup = [currentLayer parentGroup];

      var BG = getBackgroundForGroup(parentGroup),
          buttonDimensions = getButtonDimensionsForLayer(currentLayer)

      if (BG) {
        // Update background
        var frame = [BG frame]
        [frame setHeight:buttonDimensions.totalHeight]
        [frame  setWidth:buttonDimensions.totalWidth]
        
        var clframe = [currentLayer frame]
        var layerX = [clframe x],
            layerY = [clframe y]

        frame.x = layerX - buttonDimensions.offsetLeft;
        frame.y = layerY - buttonDimensions.offsetTop;

        //currentLayer.frame().x = buttonDimensions.offsetLeft;
        //currentLayer.frame().y = buttonDimensions.offsetTop;

      } else {
        // Create group and background
        var group = MSLayerGroup.new();
        var groupFrame = group.frame();
        groupFrame.setConstrainProportions(false);
        group.setName('Dynamic group');

        parentGroup.addLayers([group]);
        var BGLayer = addLayerOfRectType(group, currentLayer.rect());

        BGLayer.name = "BG"
        var frame = [BGLayer frame]

        [frame setHeight:buttonDimensions.totalHeight]
        [frame  setWidth:buttonDimensions.totalWidth]
        frame.x = buttonDimensions.x - buttonDimensions.offsetLeft
        frame.y = buttonDimensions.y - buttonDimensions.offsetTop
  

        parentGroup.removeLayer(currentLayer);
        var s = group.addLayers([currentLayer]);
        currentLayer.setIsSelected(false);
        group.resizeToFitChildrenWithOption(1);
      }
    }
  }
}