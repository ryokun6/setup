@import 'framer-inventory.js'
@import 'framer-inventory-write.js'
@import 'framer-inventory-text.js'



var fileName = "/layers.coffie"
var layerHasBeenExported = 0


var exportLayers = function(context) {
		
	var doc = context.document
	var selection = context.selection
	var cp = [doc currentPage]
	
	var selectedLayer = nil
	var output = NSMutableArray.new()
	
	// SUPPORTED LAYERS
	var howManyImages = 0
	var howManyShapes = 0
	// SOME OTHERS (THEY CAN BE EXPORTED AS GROUPS)
	var howManyOthers = 0
	
	
	
	
	if (selection.count() == 0) {
		[doc showMessage:inventoryNoLayersSelectedMessage]
		return
	}
	
	
	for (var i = 0; i < selection.count(); i++) {
		selectedLayer = [selection objectAtIndex: i]
		selectedLayerType = [selectedLayer className]
		
		if (selectedLayer.isKindOfClass(MSArtboardGroup)) {
			howManyOthers++
		}
		else if (selectedLayer.isKindOfClass(MSSliceLayer)) {
			howManyOthers++
		}
		else if (selectedLayer.isKindOfClass(MSShapeGroup)) {
			if (isExportableWithoutImage(selectedLayer)) {
				output = output.arrayByAddingObjectsFromArray(NSArray.arrayWithObjects(createRetinaRectangle(selectedLayer, cp), nil))
				howManyShapes++
			}
			else {
				output = output.arrayByAddingObjectsFromArray(NSArray.arrayWithObjects(createRetinaLayer(selectedLayer, cp), nil))
				howManyImages++
			}
		}
		else if (selectedLayer.isKindOfClass(MSLayerGroup)) {
			output = output.arrayByAddingObjectsFromArray(NSArray.arrayWithObjects(createRetinaLayer(selectedLayer, cp), nil))
			howManyImages++
		}
		else {
			howManyOthers++
		}
	}
	
	// DO WE EXPORTED ANY SUPPORTED TYPES?
	if (howManyOthers < selection.count()) {

		var string = NSMutableString.new()
		for (var i = 0; i < output.count(); i++) { string += [output objectAtIndex: i] }
		string += ln()
		
		framerInventoryOutput(string, fileName)
		[[NSPasteboard generalPasteboard] clearContents];
		[[NSPasteboard generalPasteboard] setString:string  forType:NSStringPboardType];
		
		var successMessage = inventorySuccessMessageParametricNumberedGetter(selection.count(), howManyImages, howManyShapes)
		[doc showMessage:successMessage]
	}
	else {
		[doc showMessage:inventoryBadTypesSelectedMessage]
	}
	
	
}


