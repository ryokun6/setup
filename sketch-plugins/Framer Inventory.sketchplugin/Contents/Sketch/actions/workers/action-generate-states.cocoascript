
// gererate code for layers and their states
var runGenerateStates = function(context, isTestingEnvironment) {
	
	var doc = context.document
	var selection = context.selection
	
	[[NSPasteboard generalPasteboard] clearContents]
	
	if (isTestingEnvironment != nil && isTestingEnvironment) { 
		if (showLog) { log("Prepare custom selection for tests") }
		selection = TestingEnvironment.getTestingSelection()
		
		if (showLog) { log(selection) }
	}
	
	var layers = []
	var pasteboardContent = []
	
	var currentPage = FramerInventory.getCurrentPage()
	var framerInventoryPage = FramerInventory.addPage(currentPage)
	FramerInventory.cleanPage(framerInventoryPage)
	
	var artboards = [[doc currentPage] artboards]
	
	var duplicatedArtboard = FramerInventory.returnDuplicatedArtboards(artboards)
	if (duplicatedArtboard != nil) {
		if (showLog) { log("Warning: duplicated artboards names are found") }
		selectDuplicatedArtboards([duplicatedArtboard name])
		return
	}
	
	
	var sortedSelection = FramerInventory.organiseSelection(selection)
	if (sortedSelection == nil) {
		[doc showMessage:"Nothing to generate. Please, select some layers"]
		return
	}
	
	for (var i = 0; i < [sortedSelection count]; i++) {
		var currentLayer = [sortedSelection objectAtIndex: i]
		var layer = new Layer([currentLayer name])
		
		var predicate = NSPredicate.predicateWithFormat("name == %@ && className == %@", [currentLayer name],
																						 [currentLayer className])
		for (var j = 0; j < [artboards count]; j++) {
			// if (showLog) { log("Loogking for layer " + [currentLayer name] + " on artboard " + [artboards objectAtIndex: j]) }
			
			var matchingLayers = findLayersMatchingPredicate_inContainer_filterByType(predicate, [artboards objectAtIndex: j])
			if ([matchingLayers count] > 0) {
				layer.composeState([matchingLayers firstObject])
			}
		}
		
		layers.push(layer)
	}

	
	
	for (var i = 0; i < layers.length; i++) {
		pasteboardContent += layers[i].printLayer()
	}

	
	if (!isTestingEnvironment) {
		[[NSPasteboard generalPasteboard] setString:pasteboardContent  forType:NSStringPboardType]
		FramerInventory.showDoneMessage()
	}
	
	return pasteboardContent
}
